@page "/v_tipo_sangre"
@using WebEstudiantes.Data
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory
@using System.Net.Http.Json

<PageTitle>Tipos de Sangre</PageTitle>

<h1>TIPOS DE SANGRE</h1>

@if (getTipo_SangreError || itipos_sangre is null)
{
    <p>No se encontro la API.</p>
}
else
{
    <div class="mb-3">
        <form>
            <label for="lbl_id_tiposangre" class="form-label">ID:</label>
            <input @bind="var_tiposangre" type="text" class="form-control" placeholder="0" readonly>
            <label for="lbl_sangre" class="form-label">Tipo de Sangre:</label>
            <input @bind="var_sangre" type="text" class="form-control" placeholder="ej: O-">
            <br>
            <button type="button" @onclick="Crear" class="btn btn-success"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-square" viewBox="0 0 16 16">
                <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"/>
                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
                </svg> Crear</button>
            <button type="button" @onclick="Actualizar" class="btn btn-warning"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-up" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5"/>
                </svg> Actualizar</button>
            <button type="button" @onclick="Eliminar" class="btn btn-danger"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
                <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
                </svg> Eliminar</button>
        </form>
    </div>
        
    <br>
    <table class="table table-success table-striped">
        <thead>
            <tr>
                <th width=40></th>
                <th width=50><center>Número</center></th>
                <th><center>Tipo de Sangre</center></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var tiposangre in itipos_sangre)
        {
            <tr>
            <td><button type="button" @onclick="() => enviarParametros(tiposangre.Id_tiposangre, tiposangre.Sangre)" class="btn btn-primary"><i class="oi oi-pencil-square"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                    <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                    <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"/>
                    </svg></i></button></td>
            <td><center>@tiposangre.Id_tiposangre</center></td>
            <td><center>@tiposangre.Sangre</center></td>
            </tr>
        }
        </tbody>
    </table>
}


@code {
    private string? url = "http://localhost:5296/api/TiposSangre";
    private Int32 var_tiposangre;
    private string? var_sangre;

    //cargar parametros a variables locales
    void enviarParametros(Int32 id, string? san){
        var_tiposangre = id;
        var_sangre = san;
    } 

    // Create
    private async Task Crear(){
        var client = ClientFactory.CreateClient();
        var addItem = new Tipo_sangre
        {
            Sangre = var_sangre
        };

        await client.PostAsJsonAsync(url, addItem);
        await OnInitializedAsync();
    }  

    // Update
    private async Task Actualizar(){
        var client = ClientFactory.CreateClient();
        var addItem = new Tipo_sangre
        {
            Id_tiposangre = var_tiposangre,
            Sangre = var_sangre
        };

        await client.PutAsJsonAsync($"{url}/{var_tiposangre}", addItem);
        await OnInitializedAsync();
    }
    // Delete
    private async Task Eliminar(){
        var client = ClientFactory.CreateClient();
        await client.DeleteAsync($"{url}/{var_tiposangre}");
        await OnInitializedAsync();
    }

    private IEnumerable<Tipo_sangre>? itipos_sangre = Array.Empty<Tipo_sangre>();
    private bool getTipo_SangreError;
    private bool shouldRender;
    protected override bool ShouldRender() => shouldRender;

// Metodo para leer los datos del API
    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            url);
        request.Headers.Add("Accept", "application/vnd.github.v3+json");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            itipos_sangre = await JsonSerializer.DeserializeAsync
                <IEnumerable<Tipo_sangre>>(responseStream);
        }
        else
        {
            getTipo_SangreError = true;
        }

        shouldRender = true;
    }
}